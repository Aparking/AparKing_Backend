version: "3.1"

volumes:
  postgresql-data:
  redis-data:

services:
  database:
    image: postgis/postgis:14-3.4
    restart: always
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aparking
      POSTGRES_DB: aparking_db
      POSTGRES_PASSWORD: aparking

  backend:
    container_name: backend
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:3000
    environment:
      DJANGO_SECRET_KEY: django-insecure-!eb&x8z=%ac03t5%cs-0+9kk&r%rh%3u#yjsxzt*558c971@&b #Cambiar por una clave segura
      DJANGO_DEBUG: 'True'
      DJANGO_SETTINGS_OVERRIDE: AparKing_Backend.docker_settings
      DEBUG: 1
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      - migrations
      - database

  migrations:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: sh ./migrationsInit.sh
    environment:
      DJANGO_SECRET_KEY: django-insecure-!eb&x8z=%ac03t5%cs-0+9kk&r%rh%3u#yjsxzt*558c971@&b #Cambiar por una clave segura
      DJANGO_DEBUG: 'True'
      DJANGO_SETTINGS_OVERRIDE: AparKing_Backend.docker_settings
    volumes:
      - .:/app
    depends_on:
      - database

  redis:
    image: redis:7
    restart: always
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
